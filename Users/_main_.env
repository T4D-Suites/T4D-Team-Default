
_t4dSystemAddToPATH "/sbin" "/usr/local/bin" "/usr/sbin" "/bin" "/usr/bin"

# For our compilation scripts
[[ "$_t4dDebug" == 'true' ]] && echo "Sourcing Users/_main_.env"

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Team
WS_TEAM="Default"

# Inventory default
WS_INVENTORY_ROOT_PATH=""

# Git
alias gits='_t4dSrcGitStatus'
alias gitd='git diff'
alias gita='git add'


gitc(){
    echo "$(echo " $@" | tr '[:upper:]' '[:lower:]' | sed "s| -f| \\\nfeat:|g" | sed "s| -b| \\\nfix:|g" | sed "s| -m| \\\nchore:|g" | sed "s| -r| \\\nrefactor:|g" | sed "s| -ci| \\\nci:|g" | sed "s| -p| \\\nperf:|g" | sed "s| -d|\\\ndocs:|g")" > .commit.tmp
    git commit -F .commit.tmp
    rm .commit.tmp
}

alias gitp='git push --no-verify'
alias gitpp='git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD) --no-verify'
alias gitt='git lfs track'
alias gitr='cd $(git rev-parse --show-cdup)'
alias t4d='./t4d'
alias c4d='cd $Tools4Dev_PATH'

gitcc(){
    local _FilesEdited="$(git status -s | head -3 | rev | cut -d ' ' -f1 | rev | tr '\n' ' ')"
    gitc -m "Minor Changes in $_FilesEdited"
}

gitls(){
    if [[ $(echo $1 | grep -Eo '[0-9]*') == "$1" ]]; then
        echo "$(git log --oneline -n $1  | sed "s|\[feat|\\${plgreen}[feat|g" | sed "s|\]|]\\${pstd}|g" \
                                                            | sed "s|\[fix|\\${plyellow}[fix|g" | sed "s|\]|]\\${pstd}|g" \
                                                            | sed "s|fix|\\${plyellow}fix\\${pstd}|g" \
                                                            | sed "s|refactor|\\${plblue}refactor\\${pstd}|g" \
                                                            | sed "s|chore|\\${plblue}chore\\${pstd}|g" \
                                                            | sed "s|feat|\\${plgreen}feat\\${pstd}|g" \
                                                            | sed "s|ci|\\${plpurple}ci\\${pstd}|g" \
                                                            | sed "s|\[refactor|\\${plpurple}[refactor|g" | sed "s|\]|]\\${pstd}|g" \
                                                            | sed "s|\[misc|\\${plblue}[misc|g" | sed "s|\]|]\\${pstd}|g" \
                                                            | sed "s| misc$| \\${plwhite}${mdarrow}\\${pstd}|g"  \
                                                            | sed "s| fix$| \\${plyellow}${mdarrow}\\${pstd}|g"  \
                                                            | sed "s| test$| \\${plblue}${mdarrow}\\${pstd}|g"  \
                                                            | sed "s|\[improvement|\\${plcyan}[improvement|g" | sed "s|\]|]\\${pstd}|g" \
                                                            | sed "s|^|\\${pyellow}|g" | sed "s| |\\${pstd} |" \
                                                            | sed "s|+++ b/.diff||g" \
                                                            | sed 's| +|%          |g' \
                                                            | tr '%' '\n' \
                                                            | sed "s|Merge |\\${pcyan}Merge |g")"
    else
        echo "$(_t4dSrcGitInfoLogFromBranch "${1:-develop}" "HEAD" | sed "s|\[feat|\\${plgreen}[feat|g" | sed "s|\]|]\\${pstd}|g" \
                                                            | sed "s|\[fix|\\${plyellow}[fix|g" | sed "s|\]|]\\${pstd}|g" \
                                                            | sed "s|\[refactor|\\${plpurple}[refactor|g" | sed "s|\]|]\\${pstd}|g" \
                                                            | sed "s|fix:|\\${plyellow}fix\\${pstd}|g" \
                                                            | sed "s|chore:|\\${plblue}chore\\${pstd}|g" \
                                                            | sed "s|feat:|\\${plgreen}feat\\${pstd}|g" \
                                                            | sed "s|\[misc|\\${plblue}[misc|g" | sed "s|\]|]\\${pstd}|g" \
                                                            | sed "s| misc$| \\${plwhite}${mdarrow}\\${pstd}|g"  \
                                                            | sed "s| fix$| \\${plyellow}${mdarrow}\\${pstd}|g"  \
                                                            | sed "s| test$| \\${plblue}${mdarrow}\\${pstd}|g"  \
                                                            | sed "s|\[improvement|\\${plcyan}[improvement|g" | sed "s|\]|]\\${pstd}|g" \
                                                            | sed "s|^|\\${pyellow}|g" | sed "s| |\\${pstd} |" \
                                                            | sed "s|+++ b/.diff||g" \
                                                            | sed 's| +|%          |g' \
                                                            | tr '%' '\n' \
                                                            | sed "s|Merge branch|\\${pcyan}Merge branch|g")"
    fi
}